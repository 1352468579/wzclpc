<?php
/**
 * Created by PhpStorm.
 * User: Administrator
 * Date: 2018/9/11 0011
 * Time: 下午 18:16
 */

namespace app\wap\controller;


use cmf\controller\HomeBaseController;
use app\portal\model\PortalCategoryModel;
use think\Db;
use app\admin\model\RouteModel;
use app\portal\model\PortalPostModel;
use app\admin\model\BannerModel;
use app\portal\service\PostService;
class NewsController extends HomeBaseController
{
    function _initialize()
    {
        parent::_initialize(); // TODO: Change the autogenerated stub
        $this->parentId = 11;
    }

    public function newList()
    {
        $param = $this->request->param();

        $categoryId = $this->request->param('cid', $this->parentId, 'intval');
        $portalPostModel = new PortalPostModel();
        $portalCategoryModel = new PortalCategoryModel();
        $where = [
            'a.create_time' => ['>=', 0],
            'a.delete_time' => 0
        ];

        $join = [
            ['__USER__ u', 'a.user_id = u.id']
        ];

        $field = 'a.*,u.user_login,u.user_nickname,u.user_email';

        if (!empty($categoryId)) {
            if($categoryId==$this->parentId)
            {
                $categoryIds = $portalCategoryModel->where(['path'=>['Like','%'.$categoryId.'%']])->column('id');
                $where['b.category_id'] = ['in', trim(implode(',',$categoryIds),',')];
            }else{
                $where['b.category_id'] = ['eq', $categoryId];
            }
            array_push($join, [
                '__PORTAL_CATEGORY_POST__ b', 'a.id = b.post_id'
            ]);
            array_push($join, [
                '__PORTAL_CATEGORY__ c', 'c.id = b.category_id'
            ]);
            $field = 'a.*,b.id AS post_category_id,b.list_order,b.category_id,u.user_login,u.user_nickname,u.user_email,c.name';
        }

        $startTime = empty($param['start_time']) ? 0 : strtotime($param['start_time']);
        $endTime   = empty($param['end_time']) ? 0 : strtotime($param['end_time']);
        if (!empty($startTime) && !empty($endTime)) {
            $where['a.published_time'] = [['>= time', $startTime], ['<= time', $endTime]];
        } else {
            if (!empty($startTime)) {
                $where['a.published_time'] = ['>= time', $startTime];
            }
            if (!empty($endTime)) {
                $where['a.published_time'] = ['<= time', $endTime];
            }
        }

        $keyword = empty($param['keyword']) ? '' : $param['keyword'];
        if (!empty($keyword)) {
            $where['a.post_title'] = ['like', "%$keyword%"];
        }

        $where['a.post_type'] = 1;
        $where['a.post_status'] = 1;
        $articles        = $portalPostModel->alias('a')->field($field)
            ->join($join)
            ->where($where)
            ->order('update_time', 'DESC')
            ->paginate(8);
        $articles->appends($param);
        $Banner = new BannerModel();
        $banner = $Banner->where(['type'=>'news'])->find();

        $this->assign('banner',$banner);
        $this->assign('articles', $articles->items());

        $this->assign('hot_articles', getNewList(11,5,['a.is_top'=>1]));
        $this->assign('hotSearch', hotSearch(11));

        $this->assign('recommendBlock', recommendBlock('newsList'));
        $this->assign('recommendAuthor', Links('recommend'));
        $this->assign('category', $categoryId);
        $this->assign('page', $articles->render());
        $this->assign('adv',cmf_get_option('news_adv'));
        return $this->fetch();
    }

    public function newArticle()
    {
        $id = $this->request->param('id', 0, 'intval');
        $postService         = new PostService();
        $categoryId = $this->request->param('cid', 0, 'intval');
        $categoryId===0?$categoryId=Db::name('portal_category_post')->where(['post_id' => $id])->value('category_id'):'';
        $article    = $postService->publishedArticle($id, $categoryId);

        if (empty($article)) {
            abort(404, '文章不存在!');
        }


        $prevArticle = $postService->publishedPrevArticle($id, $categoryId);
        $nextArticle = $postService->publishedNextArticle($id, $categoryId);
        $portalPostModel = new PortalPostModel();
        $join = [
            ['__PORTAL_CATEGORY_POST__ b', 'a.id = b.post_id']
        ];
        array_push($join, ['__PORTAL_CATEGORY__ c', 'c.id = b.category_id']);
        $field = 'a.*,b.post_id,b.category_id,c.name';
        $where = [
            'a.create_time' => ['>=', 0],
            'a.delete_time' => 0,
            'a.id'          => $id
        ];
        $article            = $portalPostModel->alias('a')->field($field)->join($join)->where($where)->find();
        Db::name('portal_post')->where(['id' => $id])->setInc('post_hits');
        $Banner = new BannerModel();
        $banner = $Banner->where(['type'=>'news'])->limit(1)->order('list_order')->select()->toArray();

        hook('portal_before_assign_article', $article);
        $this->assign('banner',$banner);
        $this->assign('article', $article);
        $this->assign('prev_article', $prevArticle);
        $this->assign('next_article', $nextArticle);
        $this->assign('hot_articles', getNewList(11,5,['a.is_top'=>1]));
        $this->assign('hotSearch', hotSearch(11));
        $this->assign('recommendBlock', recommendBlock('news'));
        $this->assign('recommendAuthor', Links('recommend'));
        $this->assign('hotClassForArticle', hotClassForArticle());
        $this->assign(cmf_get_option('hotClassRecode'));
        $this->assign('bootstrap', bootstrap($id));
        $this->assign('uLike', uLike());
        $this->assign('adv',cmf_get_option('news_adv'));
        return $this->fetch();
    }

    public function search()
    {
        $param = $this->request->param();

        $categoryId = $this->request->param('cid', $this->parentId, 'intval');
        $portalPostModel = new PortalPostModel();
        $portalCategoryModel = new PortalCategoryModel();
        $where = [
            'a.create_time' => ['>=', 0],
            'a.delete_time' => 0
        ];

        $join = [
            ['__USER__ u', 'a.user_id = u.id']
        ];

        $field = 'a.*,u.user_login,u.user_nickname,u.user_email';

        if (!empty($categoryId)) {
            if($categoryId==$this->parentId)
            {
                $categoryIds = $portalCategoryModel->where(['path'=>['Like','%-'.$categoryId.'-%']])->column('id');
                $where['b.category_id'] = ['in', trim(implode(',',$categoryIds).','.$this->parentId,',')];
            }else{
                $where['b.category_id'] = ['eq', $categoryId];
            }
            array_push($join, [
                '__PORTAL_CATEGORY_POST__ b', 'a.id = b.post_id'
            ]);
            array_push($join, [
                '__PORTAL_CATEGORY__ c', 'c.id = b.category_id'
            ]);
            $field = 'a.*,b.id AS post_category_id,b.list_order,b.category_id,u.user_login,u.user_nickname,u.user_email,c.name';
        }

        $startTime = empty($param['start_time']) ? 0 : strtotime($param['start_time']);
        $endTime   = empty($param['end_time']) ? 0 : strtotime($param['end_time']);
        if (!empty($startTime) && !empty($endTime)) {
            $where['a.published_time'] = [['>= time', $startTime], ['<= time', $endTime]];
        } else {
            if (!empty($startTime)) {
                $where['a.published_time'] = ['>= time', $startTime];
            }
            if (!empty($endTime)) {
                $where['a.published_time'] = ['<= time', $endTime];
            }
        }

        $keyword = empty($param['keyword']) ? '' : $param['keyword'];
        if (!empty($keyword)) {
            if(!empty($param['searchType']) && $param['searchType']==='recommendBlock')
            {
                $where['a.post_title|a.post_keywords|a.post_content'] = ['like', "%$keyword%"];
            }else{
                $where['a.post_title|a.post_keywords'] = ['like', "%$keyword%"];
            }
        }
        $where['a.post_type'] = 1;
        $where['a.post_status'] = 1;
        $count           = $portalPostModel->alias('a')->field($field)
        ->join($join)
        ->where($where)
        ->count();

        $articles        = $portalPostModel->alias('a')->field($field)
            ->join($join)
            ->where($where)
            ->order('update_time', 'DESC')
            ->paginate(8);
        $articles->appends($param);
        $Banner = new BannerModel();
        $banner = $Banner->where(['type'=>'news'])->find();
        $this->assign('banner',$banner);
        $this->assign('keyword',$keyword);
        $this->assign('count',$count?$count:0);
        $this->assign('articles', $articles->items());
        $this->assign('hot_articles', getNewList(11,5,['a.is_top'=>1]));
        $this->assign('recommendAuthor', Links('recommend'));
        $this->assign('recommendBlock', recommendBlock('newsList'));
        $this->assign('uLike', uLike());
        $this->assign('hotSearch', hotSearch(11));
        $this->assign(cmf_get_option('hotClassRecode'));
        $this->assign('hotClassForArticle', hotClassForArticle());
        $this->assign('category', $categoryId);
        $this->assign('page', $articles->render());
        $this->assign('adv',cmf_get_option('news_adv'));
        return $this->fetch();
    }


}